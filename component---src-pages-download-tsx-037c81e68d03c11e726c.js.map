{"version":3,"sources":["webpack:///./src/components/downloads/LatestVersionSection.tsx","webpack:///./src/components/downloads/AllVersionsSection.tsx","webpack:///./src/getDownloadBrandingForAsset.ts","webpack:///./src/pages/download.tsx","webpack:///./src/components/MarginContent.tsx"],"names":["DownloadButton","props","release","assetNameInclude","icon","asset","assets","find","name","includes","href","downloadUrl","onClick","window","gtag","version","BigButton","children","LatestVersionSection","useLatestRelease","styles","container","cxs","color","fontSize","buttons","display","justifyContent","flexWrap","margin","width","border","MarginContent","className","faWindows","faApple","faUbuntu","faLinux","tagName","target","faGithub","AllVersionsSection","data","useStaticQuery","allRelease","edges","map","edge","node","verticalAlign","paddingLeft","marginBottom","assetContainer","alignItems","marginLeft","cursor","primaryColor","assetContainerLeftIcon","marginRight","assetContainerRightIcon","paddingRight","assetContainerText","flexGrow","fontStyle","Date","published","toLocaleDateString","brand","assetName","endsWith","os","download","ordering","filter","sort","a","b","branding","to","Math","round","size","faDownload","Page","Helmet","title","BrandHeader","tiny","Navbar","canNavigateToHome","Footer","inner"],"mappings":"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","file":"component---src-pages-download-tsx-037c81e68d03c11e726c.js","sourcesContent":["import * as React from 'react';\nimport { MarginContent } from '../MarginContent';\nimport cxs from 'cxs';\nimport { BigButton } from '../BigButton';\nimport { faApple, faGithub, faLinux, faUbuntu, faWindows } from '@fortawesome/free-brands-svg-icons';\nimport { useLatestRelease } from '../../useLatestRelease';\nimport { Release } from '../../types';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\nconst DownloadButton: React.FC<{\n  release: Release,\n  icon: IconProp,\n  assetNameInclude: string\n}> = props => {\n  const { release, assetNameInclude, icon } = props;\n  const asset = release.assets.find(asset => asset.name.includes(assetNameInclude));\n\n  if (!asset) return null;\n\n  return (\n    <a\n      href={asset.downloadUrl}\n      onClick={() => {\n        typeof window !== \"undefined\" && (window as any).gtag('event', 'download-from-latest', {\n          version: release.name,\n          name: asset.name\n        });\n      }}\n    >\n      <BigButton icon={icon}>\n        { props.children }\n      </BigButton>\n    </a>\n  )\n}\n\nexport const LatestVersionSection: React.FC<{}> = props => {\n  const release = useLatestRelease();\n  const styles = {\n    container: cxs({\n      color: 'white',\n      ' p': {\n        fontSize: '1.2em'\n      }\n    }),\n    buttons: cxs({\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      '> a': {\n        margin: '1em 1em',\n        width: '300px',\n        border: 'none'\n      },\n    })\n  };\n\n  return (\n    <MarginContent>\n      <div className={styles.container}>\n        <h1>Download the latest version</h1>\n        <p>\n          Yana is completely free! Click on a button below to get the installer for your environment.\n          Once the installation is finished, Yana will automatically update itself once a new version\n          becomes available.\n        </p>\n        <div className={styles.buttons}>\n          <DownloadButton release={release} icon={faWindows} assetNameInclude=\".exe\">\n            Download for Windows\n          </DownloadButton>\n          <DownloadButton release={release} icon={faApple} assetNameInclude=\".dmg\">\n            Download for Mac&nbsp;OSX\n          </DownloadButton>\n          <DownloadButton release={release} icon={faUbuntu} assetNameInclude=\".AppImage\">\n            Download for Ubuntu\n          </DownloadButton>\n          <DownloadButton release={release} icon={faLinux} assetNameInclude=\".deb\">\n            Download for Debian\n          </DownloadButton>\n          <DownloadButton release={release} icon={faLinux} assetNameInclude=\".snap\">\n            Download for Linux Snapcraft\n          </DownloadButton>\n          <a href={`https://github.com/lukasbach/yana/releases/tag/${release.tagName}`} target=\"_blank\">\n            <BigButton icon={faGithub}>\n              View on GitHub\n            </BigButton>\n          </a>\n        </div>\n      </div>\n    </MarginContent>\n  );\n};\n","import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { Release } from '../../types';\nimport cxs from 'cxs';\nimport { MarginContent } from '../MarginContent';\nimport { BigButton } from '../BigButton';\nimport { faApple, faLinux, faWindows } from '@fortawesome/free-brands-svg-icons';\nimport { getDownloadBrandingForAsset } from '../../getDownloadBrandingForAsset';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { primaryColor } from '../../colors';\nimport GatsbyLink from 'gatsby-link';\n\nexport const query = graphql`\n  {\n    allRelease {\n      edges {\n        node {\n          id\n          url\n          tagName\n          name\n          created\n          published\n          assets {\n            id\n            url\n            downloadUrl\n            name\n            label\n            size\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const AllVersionsSection: React.FC<{}> = props => {\n  const data: Release[] = useStaticQuery(query).allRelease.edges.map((edge: any) => edge.node);\n\n  const styles = {\n    container: cxs({\n      color: 'white',\n      ' h2': {\n        margin: '32px 0 10px 0',\n        '> span': {\n          fontSize: '.6em',\n          verticalAlign: 'baseline',\n          paddingLeft: '16px',\n          color: '#aaa'\n        }\n      },\n      '> div': {\n        marginBottom: '100px'\n      }\n    }),\n    assetContainer: cxs({\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginLeft: '32px',\n      marginBottom: '28px',\n      cursor: 'pointer',\n      ':hover *': {\n        color: `${primaryColor} !important`\n      }\n    }),\n    assetContainerLeftIcon: cxs({\n      fontSize: '48px',\n      marginRight: '16px'\n    }),\n    assetContainerRightIcon: cxs({\n      '> span': {\n        paddingRight: '8px',\n        color: '#aaa',\n        fontSize: '.7em',\n        // fontWeight: 300\n      }\n    }),\n    assetContainerText: cxs({\n      flexGrow: 1,\n      '> p': {\n        margin: 0\n      },\n      '> :nth-child(1)': {\n        fontStyle: 'italic',\n        fontSize: '1.1em'\n      },\n      '> :nth-child(2)': {\n        color: '#aaa'\n      },\n    }),\n    buttons: cxs({\n      display: 'flex',\n      justifyContent: 'center',\n      '> button': {\n        margin: '0 1em'\n      }\n    })\n  };\n\n  return (\n    <MarginContent>\n      <div className={styles.container}>\n        <h1>Other versions</h1>\n\n        { data.map(release => (\n          <div>\n            <h2>\n              Yana { release.name }\n              <span>{' '}released on { new Date(release.published).toLocaleDateString() }</span>\n            </h2>\n\n            {\n              release.assets\n                .map(asset => ({ ...asset, brand: getDownloadBrandingForAsset(asset.name) }))\n                .filter(asset => !!asset.brand)\n                .sort((a: any, b: any) => a.brand?.ordering - b.brand?.ordering)\n                .map(asset => {\n                  const branding: any = asset.brand;\n\n                  return (\n                    <GatsbyLink to={asset.downloadUrl} onClick={() => {\n                      typeof window !== \"undefined\" && (window as any).gtag('event', 'download-from-all', {\n                        version: release.name,\n                        name: asset.name\n                      });\n                    }}>\n                      <div className={styles.assetContainer}>\n                        <div className={styles.assetContainerLeftIcon}>\n                          <FontAwesomeIcon icon={branding.icon} />\n                        </div>\n                        <div className={styles.assetContainerText}>\n                          <p>{ branding.download }</p>\n                          <p>{ asset.name }</p>\n                        </div>\n                        <div className={styles.assetContainerRightIcon}>\n                          <span>{ Math.round(asset.size / (1024 * 1024)) }MB</span>\n                          <FontAwesomeIcon icon={faDownload} />\n                        </div>\n                      </div>\n                    </GatsbyLink>\n                  );\n                })\n            }\n          </div>\n        )) }\n      </div>\n    </MarginContent>\n  );\n};\n","import { faApple, faLinux, faUbuntu, faWindows } from '@fortawesome/free-brands-svg-icons';\n\nexport const getDownloadBrandingForAsset = (assetName: string) => {\n  if (assetName.endsWith('.dmg')) {\n    return {\n      os: 'apple',\n      icon: faApple,\n      download: 'Download installer for Mac OSX (.dmg)',\n      ordering: 2,\n    };\n  } else if (assetName.endsWith('.exe')) {\n    return {\n      os: 'windows',\n      icon: faWindows,\n      download: 'Download installer for Windows (.exe)',\n      ordering: 0,\n    };\n  } else if (assetName.endsWith('mac.zip')) {\n    return {\n      os: 'apple',\n      icon: faApple,\n      download: 'Download standalone app for Mac OSX (.zip)',\n      ordering: 3,\n    };\n  } else if (assetName.endsWith('win.zip')) {\n    return {\n      os: 'windows',\n      icon: faWindows,\n      download: 'Download standalone app for Windows (.zip)',\n      ordering: 1,\n    };\n  } else if (assetName.endsWith('tar.gz')) {\n    return {\n      os: 'linux',\n      icon: faLinux,\n      download: 'Download standalone app for Linux (.tar.gz)',\n      ordering: 7,\n    };\n  } else if (assetName.endsWith('.deb')) {\n    return {\n      os: 'linux',\n      icon: faLinux,\n      download: 'Download installer for Debian (.deb)',\n      ordering: 6,\n    };\n  } else if (assetName.endsWith('.snap')) {\n    return {\n      os: 'linux',\n      icon: faLinux,\n      download: 'Download Snap installer for Linux (.snap)',\n      ordering: 5,\n    };\n  } else if (assetName.endsWith('.AppImage')) {\n    return {\n      os: 'linux',\n      icon: faUbuntu,\n      download: 'Download installer for Ubuntu (.AppImage)',\n      ordering: 4,\n    };\n  } else {\n    return false;\n  }\n}","import * as React from 'react'\nimport { BrandHeader } from '../components/BrandHeader';\nimport { Navbar } from '../components/Navbar';\nimport { LatestVersionSection } from '../components/downloads/LatestVersionSection';\nimport { AllVersionsSection } from '../components/downloads/AllVersionsSection';\nimport { Footer } from '../components/Footer';\nimport { Helmet } from '../components/Helmet';\n\nimport '../style.css';\n\nconst Page: React.FC = () => {\n  return (\n    <div>\n      <Helmet title=\"Yana - Download\" />\n      <BrandHeader tiny={true}>\n        <Navbar canNavigateToHome />\n      </BrandHeader>\n      <LatestVersionSection />\n      <AllVersionsSection />\n      <Footer />\n    </div>\n  )\n};\n\nexport default Page;\n","import * as React from 'react';\nimport cxs from 'cxs';\n\nexport const MarginContent: React.FC<{}> = props => {\n  const styles = {\n    container: cxs({\n      margin: '2em 0 2em 0',\n      display: 'flex',\n      justifyContent: 'center',\n    }),\n    inner: cxs({\n      width: '840px',\n      color: 'white',\n      ' h1': {\n        margin: '1em 0 .4em 0',\n        fontSize: '3em'\n      },\n      '@media (max-width: 1100px)': {\n        width: '100%',\n        margin: '0 1em'\n      },\n    }),\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.inner}>\n        { props.children }\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}